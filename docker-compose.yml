services:

  django:

    build: .
    command: ["gunicorn", "poolhub.wsgi:application", "-b", "0.0.0.0:8000", '--reload', '--log-level=debug']

    volumes:
      - .:/app

    environment:
      - DB_HOST=mysql
      - DB_PASSWORD=${DB_PASSWORD}

      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_S3_REGION_NAME=${AWS_S3_REGION_NAME}
      - AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME}

      - REMOTE_DB_HOST=${REMOTE_DB_HOST}
      - REMOTE_DB_NAME=${REMOTE_DB_NAME}
      - REMOTE_DB_USER=${REMOTE_DB_USER}
      - REMOTE_DB_PORT=${REMOTE_DB_PORT}
      - REMOTE_DB_PASSWORD=${REMOTE_DB_PASSWORD}

      - SECRET_KEY=${SECRET_KEY}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}

      - GOOGLE_OAUTH2_CLIENT_ID=${GOOGLE_OAUTH2_CLIENT_ID}
      - GOOGLE_OAUTH2_CLIENT_SECRET=${GOOGLE_OAUTH2_CLIENT_SECRET}
      - GOOGLE_OAUTH2_PROJECT_ID=${GOOGLE_OAUTH2_PROJECT_ID}



    depends_on:
      - celery

    restart: on-failure

  celery:
    build: .
    command: celery -A poolhub worker --loglevel=info
    volumes:
      - .:/app

      
      

  celery-beat:
    build: .
    command: celery -A poolhub beat --scheduler django_celery_beat.schedulers:DatabaseScheduler --loglevel=info
    volumes:
      - .:/app



  daphne:
    build: .
    command: ["daphne", "-u", "/tmp/daphne.sock", "--application-close-timeout", "10", "poolhub.asgi:application"]
    volumes:
      - .:/app
      - daphne-socket:/tmp
    environment:

      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_S3_REGION_NAME=${AWS_S3_REGION_NAME}
      - AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME}

      - REMOTE_DB_HOST=${REMOTE_DB_HOST}
      - REMOTE_DB_NAME=${REMOTE_DB_NAME}
      - REMOTE_DB_USER=${REMOTE_DB_USER}
      - REMOTE_DB_PORT=${REMOTE_DB_PORT}
      - REMOTE_DB_PASSWORD=${REMOTE_DB_PASSWORD}

      - SECRET_KEY=${SECRET_KEY}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}

      - GOOGLE_OAUTH2_CLIENT_ID=${GOOGLE_OAUTH2_CLIENT_ID}
      - GOOGLE_OAUTH2_CLIENT_SECRET=${GOOGLE_OAUTH2_CLIENT_SECRET}
      - GOOGLE_OAUTH2_PROJECT_ID=${GOOGLE_OAUTH2_PROJECT_ID}



  nginx:
    image: nginx:latest


    ports:
      - "80:80"  
   

    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./staticfiles:/app/static
      - ./media:/app/media
      - daphne-socket:/tmp

    depends_on:
      - django
      - daphne
    restart: always

volumes:
  daphne-socket:
