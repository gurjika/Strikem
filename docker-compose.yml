services:
  mysql:
    image: mysql:8.0
    ports:
      - 3306:3306

    environment:
    
      - MYSQL_DATABASE=poolhub
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}


    volumes:

      - ../poolhubdata:/var/lib/mysql 


  redis:
    image: redis
    # ports:
    #   - "6379:6379"
    volumes:
      - redis-data:/data
    expose:
      - "6379"

    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 1s
      retries: 5
    command: ["redis-server", "--appendonly", "yes"]  # Enable AOF persistence


  django:

    build: .
    command: ["./wait-for-it.sh", "db:3306", "--", "python", "manage.py", "runserver", "0.0.0.0:8000"]

    ports:
      - "8000:8000"

    volumes:
      - .:/app

    environment:
      - DB_HOST=mysql
      - DB_PASSWORD=${DB_PASSWORD}
      - SECRET_KEY=${SECRET_KEY}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}



    depends_on:
      - mysql
      - redis
      - celery

    restart: on-failure

  celery:
    build: .
    command: celery -A poolhub worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      redis:
        condition: service_healthy
      
      

  celery-beat:
    build: .
    command: celery -A poolhub beat --scheduler django_celery_beat.schedulers:DatabaseScheduler --loglevel=info
    volumes:
      - .:/app
    depends_on:
      redis:
        condition: service_healthy



  flower:
    build: .
    command: celery -A poolhub flower

    ports:
      - "5555:5555" 
    environment:
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - DEBUG=1
      - CELERY_BROKER_URL=redis://redis:6379/1
    depends_on:
      - celery
      - redis

    volumes:
    - flower-logs:/flower/logs 


volumes:
  redis-data:
  flower-logs:
